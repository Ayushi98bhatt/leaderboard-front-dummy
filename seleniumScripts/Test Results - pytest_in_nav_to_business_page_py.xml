<?xml version="1.0" encoding="UTF-8"?><testrun duration="23936" footerText="Generated by PyCharm on 22/05/2024, 17:42" name="pytest in nav_to_business_page.py">
    <count name="total" value="1"/>
    <count name="failed" value="1"/>
    <config nameIsGenerated="true" configId="tests" name="pytest in nav_to_business_page.py">
        <module name="selenium scripts"/>
        <option name="ENV_FILES" value=""/>
        <option name="INTERPRETER_OPTIONS" value=""/>
        <option name="PARENT_ENVS" value="true"/>
        <option name="SDK_HOME" value=""/>
        <option name="WORKING_DIRECTORY" value="/Users/ayushisharma/Desktop/selenium scripts/Businessbay project/Businessbay"/>
        <option name="IS_MODULE_SDK" value="true"/>
        <option name="ADD_CONTENT_ROOTS" value="true"/>
        <option name="ADD_SOURCE_ROOTS" value="true"/>
        <option name="_new_keywords" value="&quot;&quot;"/>
        <option name="_new_parameters" value="&quot;&quot;"/>
        <option name="_new_additionalArguments" value="&quot;&quot;"/>
        <option name="_new_target" value="&quot;/Users/ayushisharma/Desktop/selenium scripts/Businessbay project/Businessbay/nav_to_business_page.py&quot;"/>
        <option name="_new_targetType" value="&quot;PATH&quot;"/>
        <method v="2"/>
    </config>
    <suite duration="23936" locationUrl="python&lt;/Users/ayushisharma/Desktop/selenium scripts/Businessbay project/Businessbay&gt;://nav_to_business_page" name="nav_to_business_page" status="failed">
        <suite duration="23936" locationUrl="python&lt;/Users/ayushisharma/Desktop/selenium scripts/Businessbay project/Businessbay&gt;://nav_to_business_page.LoginTestCase" name="LoginTestCase" status="failed">
            <test duration="23936" locationUrl="python&lt;/Users/ayushisharma/Desktop/selenium scripts/Businessbay project/Businessbay&gt;://nav_to_business_page.LoginTestCase.test_create_business_success" name="test_create_business_success" metainfo="test_create_business_success" status="failed">
                <diff actual="''" expected="'Business created successfully'"/>
                <output type="stdout">FAILED [100%]
</output>
                <output type="stderr">Business created successfully
'' != 'Business created successfully'
self = &lt;nav_to_business_page.LoginTestCase testMethod=test_create_business_success&gt;
    def test_create_business_success(self):
        # Navigate to the login page
        self.driver.get("https://uat.businessbay.io/")
    
        # Use WebDriverWait to wait for the get_started button to be clickable
        wait = WebDriverWait(self.driver, 10)  # Increased timeout for reliability
        try:
            get_started = wait.until(EC.element_to_be_clickable((By.CLASS_NAME, "blue-button")))
            get_started.click()
        except Exception as e:
            print(f"Exception encountered while trying to find 'get_started' button: {e}")
            self.fail("Unable to find 'get_started' button")
    
        #time.sleep(2)
    
        # Navigate to the login page
        self.driver.get("https://uat.businessbay.io/login")
    
        # Find the email and password fields
        email = self.driver.find_element(By.NAME, "email")
        password = self.driver.find_element(By.NAME, "password")
    
        # Enter the username and password
        email.send_keys("tytyjyna@yopmail.com")
        password.send_keys("Pa$$w0rd!")
    
        # Find the login button and click on it
        login_btn = self.driver.find_element(By.XPATH, '//*[@id="root"]/div/div/div/div/div[1]/div/div[2]/form/div[5]/button')
        login_btn.click()
        #time.sleep(2)
    
        # Refresh the page
        #self.driver.refresh()
        #time.sleep(2)
    
        # Find the create_btn and click on it
        create_btn = wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id="root"]/div/div/header')))
        create_btn.click()
    
        # Click on the second child element
        second_child_xpath = '//*[@id="MobileBaarview"]/a'
        second_child_element = wait.until(EC.element_to_be_clickable((By.XPATH, second_child_xpath)))
        second_child_element.click()
        #time.sleep(5)
    
        # Find enter business name text field and send keys
        enterb_nam = self.driver.find_element(By.XPATH, '//*[@id="root"]/div/div/main/div[3]/div/div/div/div[2]/div/div[1]/div/div[1]/div[1]/input')
    
        # Enter the value
        enterb_nam.send_keys("fgferer singh")
    
        # Find the template and click on it
        template = wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id="root"]/div/div/main/div[3]/div/div/div/div[2]/div/div[1]/div/div[1]/div[4]')))
        template.click()
    
        createbtn = self.driver.find_element(By.XPATH, '//*[@id="root"]/div/div/main/div[2]/div[5]/div/div')
    
        createbtn.click()
        time.sleep(5)
        # savandprev = self.driver.find_element(By.XPATH, '//*[@id="root"]/div/div/main/div[3]/div/div/div/div[2]/div/div[2]/div/div/p')
        # savandprev.click()
        # time.sleep(10)
    
        expected_toast_msg = "Business created successfully"
        actual_toast_msg = self.driver.find_element(By.XPATH, '//*[@id="root"]/div/div/div[2]')
    
&gt;       self.assertEqual(expected_toast_msg, actual_toast_msg.text, "Business created successfully")
nav_to_business_page.py:82: AssertionError
</output>
            </test>
        </suite>
    </suite>
</testrun>
